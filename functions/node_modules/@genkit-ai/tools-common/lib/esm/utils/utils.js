import * as fs from 'fs';
import * as path from 'path';
export function getNodeEntryPoint(directory) {
    const packageJsonPath = path.join(directory, 'package.json');
    let entryPoint = 'lib/index.js';
    if (fs.existsSync(packageJsonPath)) {
        const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf8'));
        entryPoint = packageJson.main;
    }
    return entryPoint;
}
export function getEntryPoint(directory) {
    const runtime = detectRuntime(directory);
    switch (runtime) {
        case 'nodejs':
            return getNodeEntryPoint(directory);
        case 'go':
            return '.';
        default:
            return;
    }
}
export function detectRuntime(directory) {
    const files = fs.readdirSync(directory);
    for (const file of files) {
        const filePath = path.join(directory, file);
        const stat = fs.statSync(filePath);
        if (stat.isFile() && (path.extname(file) === '.go' || file === 'go.mod')) {
            return 'go';
        }
    }
    if (fs.existsSync(path.join(directory, 'package.json'))) {
        return 'nodejs';
    }
    return undefined;
}
//# sourceMappingURL=utils.js.map